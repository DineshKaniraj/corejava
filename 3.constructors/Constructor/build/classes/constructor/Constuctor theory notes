Constructor:
    -A constructor in java us a special method that is used to initialize objects. 
    -The constrictor is called when an object of a class is created.
    -It can be used to set initial values for object attributes.

ex:

Test t = new Test();

Test ----> class name
t -------> referance variable/object name
= -------> assignment operator
new -----> keyword (used to create the object)
Test() --> constructor

rules to declare the constructor in java:
    -cons-name & class name must be same
    -cons able to take parameters
    -cons not allowed return types

types of constructor:
1.default constructor       //zero 
2.parameter constructor/user defined constructor


a.default constructor:
    it can be created by user otherwise system will created automatically.

//default parameter constructor created by user
package constructor;
public class Constructor {
    Constructor()       //default constructor
    {
                    //empty implementation statement
    }
    void m1()
    {
        System.out.println("This is method:");
    }
    public static void main(String[] args) 
    {
        Constructor c = new Constructor();
        c.m1();
    }
    
}

b.parameter constructor and default constructor created by user
package constructor;
public class Constructor1 
{
    Constructor1()              //default constructor
    {
        System.out.println("This is default constructor");   
    }
    Constructor1(int a)         //parameterized constructor
    {
        System.out.println("This is parameterized constructor:"+a);  
    }
    void test()
    {
        System.out.println("This is normal method:");
    }
    public static void main(String[] args)
    {
        Constructor1 cc = new Constructor1();
        cc.test();
        Constructor1 cc1 = new Constructor1();
        cc1.test();
        Constructor1 cc2 = new Constructor1(10);
        cc2.test();
    }
}


c.system creates default constructor automatically if we didnot create any constructor.
If suppose we create any constructor (default/parameter) then system didnot create automatically.
if we create parameter constructor we have to pass the value in the object creation. otherwise 
it shows an error.

ex:    package constructor;
public class Constructor2 
{
    Constructor2(int a)
    {
        System.out.println("This is parameterized constructor");
    }
    void m1()
    {
        System.out.println("This is the method");
    }
    public static void main(String[] args)
    {
       // Constructor2 c = new Constructor2(); //If we didnot create any constructor then default constructor created by system itself 
                                                //but if u create any one of the constructor then system cannot produce a default constructor.
       //c.m1();
    }
}


Advantage of the constructor or purpose of constructor:
1. constructor executes after object creation.
    ex:package constructor;
public class Constructor3 
{
    Constructor3()
    {System.out.println("This is default constructor");}
    public static void main(String[] args)
    {
    Constructor3 cc = new Constructor3();
    }
    
}

2. Constructor used to initialized  the value for instance variable and helps to execute during 
object creation.

ex:package constructor;
public class Constructor4 
{
  int a=100;
  String b= "Dinesh";
  float c= 209.02f;

    public Constructor4() 
    {
        a=110;
        b="ramesh";
        c=222.33f;
    }
  
  
  
  void m1()
  {
      System.out.println("a:"+a);
      System.out.println("b:"+b);
      System.out.println("c:"+c);
  }
    public static void main(String[] args) 
    {
        Constructor4 cc = new Constructor4();
        cc.m1();
        Constructor4 cc1 = new Constructor4();
        cc1.m1();
    }
}
    output: a:110
            b:ramesh
            c:222.33
            a:110
            b:ramesh
            c:222.33

It has some disadvantage that is we canot change the value for different object creation. to overcome that
we have to create parameter constructor and this keyword.

ex:
package constructor;
public class Constructor5 
{
    int eid;        // {we can use instance variable in the class}
    String ename;
    float esalary;
    
    Constructor5(int eid,String ename,float esalary)  //local variable in parameterized bracket can use only within the constructor.
    {
        this.eid=eid;  //this keyword is to access the same power of instance variable.
        this.ename=ename;
        this.esalary=esalary;
    }
    void display()
    {
        System.out.println("EmployeeId: "+eid+", EmployeeName: "+ename+", EmployeeSalary: "+esalary);
    }
    public static void main(String[] args) 
    {
        Constructor5 cc = new Constructor5(101,"Dinesh",10000.00f);
        cc.display();
        Constructor5 cc1 = new Constructor5(102,"Vignesh",12000.09f);
        cc1.display();
        
    }
}
output:
        EmployeeId: 101, EmployeeName: Dinesh, EmployeeSalary: 10000.0
        EmployeeId: 102, EmployeeName: Vignesh, EmployeeSalary: 12000.09

----------------------------------------------------------------
A constructor can call another constructor but only one constructor is permitted

ex: package constructor;
public class Constructor6 
{
    Constructor6()
    {
        this(10);       //this keyword represents the single parameterized constructor and it should be first in the statement
        //this(12,23); only one another constructor can call in constructor...multiple constructor cannot called in constructor
        System.out.println("default constructor");
                

    }
    Constructor6(int a)
    {
        this(12,56);
        System.out.println("Single parameterized constructor");
    }
    Constructor6(int a,int b)
    {
        System.out.println("Multiple parameterized constructor");
    }
    
    public static void main(String[] args) {
        Constructor6 cc = new Constructor6();
    }
}

output: 
        Multiple parameterized constructor
        Single parameterized constructor
        default constructor


